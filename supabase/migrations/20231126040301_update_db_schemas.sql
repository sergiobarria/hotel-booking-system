create table "public"."bookings" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "start_date" timestamp without time zone,
    "end_date" timestamp without time zone,
    "num_nights" smallint,
    "num_guests" smallint,
    "cabin_price" real,
    "extras_price" real,
    "total_price" real,
    "status" character varying,
    "has_breakfast" boolean,
    "is_paid" boolean,
    "observations" text,
    "cabin_id" bigint,
    "guest_id" bigint
);


alter table "public"."bookings" enable row level security;

create table "public"."cabins" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" character varying,
    "max_capacity" smallint,
    "regular_price" smallint,
    "discount" smallint,
    "description" text,
    "image" character varying
);


alter table "public"."cabins" enable row level security;

create table "public"."guests" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "full_name" character varying,
    "email" character varying,
    "national_id" character varying,
    "nationality" character varying,
    "country_flag" character varying
);


alter table "public"."guests" enable row level security;

create table "public"."settings" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "min_booking_length" smallint,
    "max_booking_length" smallint,
    "max_guests_per_booking" smallint,
    "breakfast_price" real
);


alter table "public"."settings" enable row level security;

CREATE UNIQUE INDEX bookings_pkey ON public.bookings USING btree (id);

CREATE UNIQUE INDEX cabins_pkey ON public.cabins USING btree (id);

CREATE UNIQUE INDEX guests_pkey ON public.guests USING btree (id);

CREATE UNIQUE INDEX settings_pkey ON public.settings USING btree (id);

alter table "public"."bookings" add constraint "bookings_pkey" PRIMARY KEY using index "bookings_pkey";

alter table "public"."cabins" add constraint "cabins_pkey" PRIMARY KEY using index "cabins_pkey";

alter table "public"."guests" add constraint "guests_pkey" PRIMARY KEY using index "guests_pkey";

alter table "public"."settings" add constraint "settings_pkey" PRIMARY KEY using index "settings_pkey";

alter table "public"."bookings" add constraint "bookings_cabin_id_fkey" FOREIGN KEY (cabin_id) REFERENCES cabins(id) not valid;

alter table "public"."bookings" validate constraint "bookings_cabin_id_fkey";

alter table "public"."bookings" add constraint "bookings_guest_id_fkey" FOREIGN KEY (guest_id) REFERENCES guests(id) not valid;

alter table "public"."bookings" validate constraint "bookings_guest_id_fkey";

create policy "Enable read access for all users"
on "public"."bookings"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."cabins"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."guests"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."settings"
as permissive
for select
to public
using (true);



